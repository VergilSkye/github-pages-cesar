{"version":3,"sources":["components/Crip.js","components/BruteForce.js","components/Freq.js","components/DescripOption.js","components/Descrip.js","components/Comp.js","components/Selector.js","App.js","index.js"],"names":["Crip","props","renderContent","className","htmlFor","type","id","value","state","numberShift","onChange","handleChangeNumber","bind","rows","text","handleChangeText","convert","readOnly","sinal","mod","n","m","texto","numero","parseInt","saida","i","length","c","match","code","charCodeAt","String","fromCharCode","cesarCifra","this","event","setState","target","React","Component","BruteForce","renderResponse","p","aux","push","map","index","temp","key","tentativas","style","wordWrap","flex","Freq","num","l","toLowerCase","mapLetterAndFreq","Map","set","get","mapAsc","sort","a","b","Array","from","keys","console","log","funcaoFreq","e","caract","lowerCaseT","lowerCaseA","lowerCaseS","funcaoTentativas","DescripOption","divNumber","$","fn","transition","semanticUiTransition","dropdown","semanticUiDropdown","Descrip","ref","el","name","data-value","Comp","renderList","Selector","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f103f0ff.chunk.js","sourcesContent":["import React from 'react';\n\nclass Crip extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          text: `          \nO poeta e um fingidor.\nFinge tao completamente\nQue chega a fingir que e dor\nA dor que deveras sente.\n\nE os que leem o que escreve,\nNa dor lida sentem bem,\nNao as duas que ele teve,\nMas so a que eles nao tem.\n\nE assim nas calhas da roda\nGira, a entreter a razao,\nEsse comboio de corda\nQue se chama o coracao.\n          `,\n          numberShift: 0,  \n          sinal: props.sinal           \n        };\n      }   \n\n    convert() {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };\n        \n        return cesarCifra(this.state.text, this.state.numberShift, this.state.sinal);\n    }\n    handleChangeText(event) {\n        this.setState({\n          text: event.target.value\n        });        \n    }\n    handleChangeNumber(event) {\n        this.setState({\n          numberShift: event.target.value\n        });\n    }\n    \n\n    renderContent = () => {\n        return(\n        <div className=\"ui padded segment\">\n            <div >\n                <div className=\"ui form\">\n                    <div className=\"field\">\n                        <label htmlFor=\"example-number-input\">Chave</label>\n                        <input \n                                type=\"number\"  id=\"example-number-input\" \n                                value={this.state.numberShift} onChange={this.handleChangeNumber.bind(this)}\n                        />                      \n                    </div>\n                </div>\n            </div>\n            <br/>\n            <br/>\n            \n            \n                <div className='ui form'>\n                    <div className=\"two fields\">\n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"20\"\n                            value={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>\n                            \n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Saida</label>\n                            <textarea  className=\"form-control bg-white\" id=\"exampleFormControlTextarea1\" \n                             rows=\"20\" \n                            value={this.convert()} readOnly ></textarea>\n                        </div>\n                   \n                    </div>               \n                \n                          \n                </div>\n            \n        </div>\n\n        );\n    }\n\n\n    render(){\n        return(<div>{this.renderContent()}</div>)\n    }\n}\nexport default Crip;","import React from 'react'\n\nclass BruteForce extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           text: `          \nO poeta e um fingidor.\nFinge tao completamente\nQue chega a fingir que e dor\nA dor que deveras sente.\n\nE os que leem o que escreve,\nNa dor lida sentem bem,\nNao as duas que ele teve,\nMas so a que eles nao tem.\n\nE assim nas calhas da roda\nGira, a entreter a razao,\nEsse comboio de corda\nQue se chama o coracao.\n          `,\n          sinal: props.sinal           \n        };\n      } \n      convert(tentativas) {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };       \n        return cesarCifra(this.state.text, tentativas, this.state.sinal);\n    }\n    handleChangeText(event) {\n        this.setState({\n          text: event.target.value\n        });        \n    }\n    renderResponse=()=>{\n        let p= [];\n        for(let i=0; i<26; i++){\n            let aux = this.convert(i);\n            p.push(aux);\n        }\n        return p.map((text,index)=> {\n            let temp=index;\n            if(index<10)\n                index = '0'+index\n            return (\n                <div key={temp}>\n                    <div className=\"item\" >{index} : {text}</div>\n                    <hr/>\n                    <br/>\n                </div>\n                \n            )\n        });\n    }\n    \n    render(){\n        var divStyle = {\n            wordWrap: 'break-word',\n            flex: 'inherit'\n          };\n        return (\n            <div>\n                <h1>BruteForce</h1>\n                <div className='ui form'>                   \n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"20\"\n                            value={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>                            \n                        </div>                          \n                </div>\n                <div className=\"ui list\">\n                    <div style={divStyle}\n                         className=\"ui divided items    \">                            \n                             {this.renderResponse()}\n                             \n                        \n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default BruteForce;","import React from 'react'\n\nclass Freq extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           text: `          \nO poeta e um fingidor.\nFinge tao completamente\nQue chega a fingir que e dor\nA dor que deveras sente.\n\nE os que leem o que escreve,\nNa dor lida sentem bem,\nNao as duas que ele teve,\nMas so a que eles nao tem.\n\nE assim nas calhas da roda\nGira, a entreter a razao,\nEsse comboio de corda\nQue se chama o coracao.\n          `, \n          sinal: props.sinal,\n          num: 2           \n        };\n      } \n      convert(tentativas) {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };          \n        return cesarCifra(this.state.text, tentativas, this.state.sinal);\n    }\n\n      // Funcao para descobrir letra de maior frequencia\n      funcaoTentativas(tentativas){\n        const funcaoFreq= () =>{\n          let text = this.state.text.toLowerCase();\n          let mapLetterAndFreq= new Map();\n          for(let i =0; i<26; i++ ){\n            mapLetterAndFreq.set(String.fromCharCode(i+97), 0)      \n          }\n  \n          let l;\n          for(let i=0; i<text.length;i++){           \n            l = text[i];        \n            if(l.match(/[a-zA-Z]/i)){        \n              let temp = mapLetterAndFreq.get(l)        \n              temp++;        \n              mapLetterAndFreq.set(l,temp); \n            }\n          }\n         \n          var mapAsc = new Map([...mapLetterAndFreq].sort((a,b)=>a[1]===b[1]?0 : a[1]>b[1]?-1:1));   \n          let aux =  Array.from([...mapAsc.keys()]);\n          console.log(aux) ;    \n          return aux;\n              \n        }\n        // InGLES / PORTUGUES\n        // T: 116 aparece  \t16.671% \n        // A: 97 aparece  \t11.602% \n        // S: 115 aparece  \t07.755% %      \n        \n        // PORTUGUES\n        // A: 97 aparece  \t14.63% \n        // E: 101 aparece  \t12.57% \n        // O: 111 aparece  \t10.73 %   \n        const array = funcaoFreq();\n        return array.map((e, index) => {\n            let caract = e.charCodeAt();\n            if(index < tentativas){\n\n          \n              let lowerCaseT    = this.convert(parseInt(caract)- 97 );\n              let lowerCaseA    = this.convert(parseInt(caract) - 101);\n              let lowerCaseS    = this.convert(parseInt(caract) - 111); \n              return (\n                <div className=\"ui message\" key={index + 'M'} >\n                    <div className=\"item\" key={index + 'A'} >{index}-A : {lowerCaseT}</div>\n                    <hr/>\n                    <br/>\n                    <div className=\"item\" key={index + 'E'}>{index}-E : {lowerCaseA}</div>\n                    <hr/>\n                    <br/>\n                    <div className=\"item\" key={index + 'O'}>{index}-O : {lowerCaseS}</div>\n                    <hr/>\n                    <br/>\n                </div>                \n            )             \n            }\n            return null\n        })\n        \n      }\n    \n     \n    handleChangeText(event) {\n        this.setState({\n          text: event.target.value.toLowerCase()\n        });        \n    }\n    handleChangeNumber(event) {\n      this.setState({\n        num: event.target.value\n      });\n  }\n    \n    \n    render(){\n        var divStyle = {\n            wordWrap: 'break-word',\n            flex: 'inherit'\n          };\n        return (\n            <div>\n                <h1>Frequência</h1>\n                <p>Iremos encontrar as letras que mais aparecem no texto </p>\n                <p>chutaremos que essas letras são umas das 3 letras que mais aparecem no alfabeto</p>                \n                <div >\n                  <div className=\"ui form\">\n                      <div className=\"field\">\n                          <label htmlFor=\"example-number-input\">Tentativas</label>\n                          <input \n                                  type=\"number\"  id=\"example-number-input\" \n                                  value={this.state.num} onChange={this.handleChangeNumber.bind(this)}\n                          />                      \n                      </div>\n                  </div>\n                </div>\n                \n                <div className='ui form'>\n                      \n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"20\"\n                            value={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>                            \n                        </div>   \n                  </div>                            \n                \n                <div className=\"ui list\">\n                    <div style={divStyle}\n                         className=\"ui divided items\">                            \n                             {this.funcaoTentativas(this.state.num)}                        \n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Freq;","import React from 'react'\n\nimport Crip from './Crip'\nimport BruteForce from './BruteForce'\nimport Freq from './Freq'\n\nclass DescripOption extends React.Component {\n    render(){\n        if(this.props.divNumber === '1'){\n            return<div><Crip sinal='-'/></div>\n        } else if (this.props.divNumber === '2'){\n            return <BruteForce sinal='-'/>\n        } else {\n            return <Freq sinal='-'/>\n        }\n        \n    }\n}\n\nexport default DescripOption;","import React from 'react'\n\nimport DescripOption from './DescripOption'\nimport semanticUiTransition from 'semantic-ui-transition';\nimport semanticUiDropdown from 'semantic-ui-dropdown';\nimport $ from 'jquery'\n\n$.fn.transition = semanticUiTransition\n$.fn.dropdown = semanticUiDropdown\n\n\nclass Descrip extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = { value: '1'};\n        this.dropdown = null\n      }\n      \n      onChange(e) {\n        this.setState({\n          value: e.target.value\n        })\n      }\n     \n      componentDidMount(){          \n        $(this.dropdown).dropdown({\n            onChange: value => { this.setState({ value }) }\n          })\n      }\n      componentDidUpdate () { $(this.dropdown).dropdown('refresh') }\n      \n      \n      render() {\n       \n       \n        return ( \n            <div >          \n                <div className=\"field\">       \n                        <p>Metodo de Descriptografar     </p>     \n                        <div ref={el => { this.dropdown = el }} className=\"ui fluid search selection dropdown \" id=\"hit\" >\n                            <input type=\"hidden\" name={this.props.name}/>\n                            <div className=\"default text\">Chave</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu\">\n                                <div className='item' data-value='1'>Chave</div>\n                                <div className='item' data-value='2'>Força Bruta</div>\n                                <div className='item' data-value='3'>Frequencia</div>\n                            </div>                            \n                        </div>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>                  \n                <DescripOption divNumber={this.state.value} />      \n             </div>\n             \n        )\n      }\n}\n\nexport default Descrip;","import React from 'react';\n\nimport Crip from './Crip'\nimport Descrip from './Descrip'\n\nclass Comp extends React.Component{\n    renderList = () => {\n        \n        if(this.props.divNumber == null){\n            return(\n                <div> Nulo </div>\n            );\n        }\n        if(this.props.divNumber === '1'){\n            return(\n                <div> <Crip sinal = '+'/> </div>\n            );\n        } else if(this.props.divNumber === '2') {\n            return(\n                <div><Descrip/> </div>\n            );\n        } else {\n            return(\n                <div> Invalida </div>\n            );\n        }\n    }\n\n    render() {\n        \n        return(\n            <div>                \n               {this.renderList()}\n            </div>\n        );\n    }\n}\n\nexport default Comp;","import React from 'react';\nimport Comp from './Comp'\n\n\nimport semanticUiTransition from 'semantic-ui-transition';\nimport semanticUiDropdown from 'semantic-ui-dropdown';\nimport $ from 'jquery'\n\n$.fn.transition = semanticUiTransition\n$.fn.dropdown = semanticUiDropdown\n\nclass Selector extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { value: '1'};\n        this.dropdown = null\n      }\n      \n      onChange(e) {\n        this.setState({\n          value: e.target.value\n        })\n      }\n     \n      componentDidMount(){          \n        $(this.dropdown).dropdown({\n            onChange: value => { this.setState({ value }) }\n          })\n      }\n      componentDidUpdate () { $(this.dropdown).dropdown('refresh') }\n      \n      \n      render() {\n       \n       \n        return ( \n            <div >          \n                <div className=\"field\">                    \n                        <div ref={el => { this.dropdown = el }} className=\"ui fluid search selection dropdown \" id=\"hit\" >\n                            <input type=\"hidden\" name={this.props.name}/>\n                            <div className=\"default text\">Escolha...</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu\">\n                                <div className='item' data-value='1'>Criptografar</div>\n                                <div className='item' data-value='2'>Descriptografar</div>\n                            </div>                            \n                        </div>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>  \n                <Comp divNumber = {this.state.value}/>              \n             </div>\n             \n        )\n      }\n}\n\nexport default Selector;\n// <Comp divNumber={this.state.value} />","import React from 'react';\nimport Selector from './components/Selector'\n\n\nfunction App() {\n  return (\n    <div className=\"ui raised very padded text container segment\">\n      <h2 className=\"ui header center  aligned\">Cifra de Cesar</h2>\n      <Selector />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}