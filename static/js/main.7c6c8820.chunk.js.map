{"version":3,"sources":["components/Crip.js","components/BruteForce.js","components/Freq.js","components/DescripOption.js","components/Descrip.js","components/Comp.js","components/Selector.js","App.js","index.js"],"names":["Crip","props","renderContent","className","htmlFor","type","id","value","state","numberShift","onChange","handleChangeNumber","bind","rows","placeholder","text","handleChangeText","convert","readOnly","sinal","mod","n","m","texto","numero","parseInt","saida","i","length","c","match","code","charCodeAt","String","fromCharCode","cesarCifra","this","event","setState","target","React","Component","BruteForce","renderResponse","p","aux","push","map","index","temp","key","tentativas","style","wordWrap","flex","Freq","num","funcaoTentativas","l","toLowerCase","mapLetterAndFreq","Map","set","get","mapAsc","sort","a","b","Array","from","keys","console","log","funcaoFreq","e","caract","lowerCaseT","lowerCaseA","lowerCaseS","DescripOption","divNumber","$","fn","transition","semanticUiTransition","dropdown","semanticUiDropdown","Descrip","ref","el","name","data-value","Comp","renderList","Selector","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c6c8820.chunk.js","sourcesContent":["import React from 'react';\n\nclass Crip extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          text: 'Enter a word or phrase to encode',\n          numberShift: 0,  \n          sinal: props.sinal           \n        };\n      }   \n\n    convert() {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };\n        \n        return cesarCifra(this.state.value, this.state.numberShift, this.state.sinal);\n    }\n    handleChangeText(event) {\n        this.setState({\n          value: event.target.value\n        });        \n    }\n    handleChangeNumber(event) {\n        this.setState({\n          numberShift: event.target.value\n        });\n    }\n    \n\n    renderContent = () => {\n        return(\n        <div className=\"ui padded segment\">\n            <div >\n                <div className=\"ui form\">\n                    <div className=\"field\">\n                        <label htmlFor=\"example-number-input\">Chave</label>\n                        <input \n                                type=\"number\"  id=\"example-number-input\" \n                                value={this.state.numberShift} onChange={this.handleChangeNumber.bind(this)}\n                        />                      \n                    </div>\n                </div>\n            </div>\n            <br/>\n            <br/>\n            \n            \n                <div className='ui form'>\n                    <div className=\"two fields\">\n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"10\"\n                            placeholder={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>\n                            \n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Saida</label>\n                            <textarea  className=\"form-control bg-white\" id=\"exampleFormControlTextarea1\" \n                             rows=\"10\" \n                            value={this.convert()} readOnly ></textarea>\n                        </div>\n                   \n                    </div>               \n                \n                          \n                </div>\n            \n        </div>\n\n        );\n    }\n\n\n    render(){\n        return(<div>{this.renderContent()}</div>)\n    }\n}\nexport default Crip;","import React from 'react'\n\nclass BruteForce extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          text: '', \n          sinal: props.sinal           \n        };\n      } \n      convert(tentativas) {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };       \n        return cesarCifra(this.state.text, tentativas, this.state.sinal);\n    }\n    handleChangeText(event) {\n        this.setState({\n          text: event.target.value\n        });        \n    }\n    renderResponse=()=>{\n        let p= [];\n        for(let i=0; i<26; i++){\n            let aux = this.convert(i);\n            p.push(aux);\n        }\n        return p.map((text,index)=> {\n            let temp=index;\n            if(index<10)\n                index = '0'+index\n            return (\n                <div>\n                    <div className=\"item\" key={temp}>{index} : {text}</div>\n                    <hr/>\n                    <br/>\n                </div>\n                \n            )\n        });\n    }\n    \n    render(){\n        var divStyle = {\n            wordWrap: 'break-word',\n            flex: 'inherit'\n          };\n        return (\n            <div>\n                <h1>BruteForce</h1>\n                <div className='ui form'>                   \n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"3\"\n                            placeholder={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>                            \n                        </div>                          \n                </div>\n                <div className=\"ui list\">\n                    <div style={divStyle}\n                         className=\"ui divided items    \">                            \n                             {this.renderResponse()}\n                             \n                        \n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default BruteForce;","import React from 'react'\n\nclass Freq extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          text: '', \n          sinal: props.sinal,\n          num: 2           \n        };\n      } \n      convert(tentativas) {\n        function mod(n, m) {                    \n            return ((n % m) + m) % m;\n          \n        }\n        const cesarCifra = (texto, numero, sinal) => {\n        numero = parseInt(numero);\n        if (!texto) texto = ' ';\n          // caso o numero seja negativo\n          if (numero < 0)\n            numero = mod(numero, 26);\n          if(numero>26){\n            numero = mod(numero,26);\n          }\n        \n        var saida = '';\n        for (var i = 0; i < texto.length; i ++) {\n    \n          var c = texto[i];\n         \n    \n          // Se for uma letra\n          if (c.match(/[a-z]/i)) {    \n            // Get its code\n            var code = parseInt(c.charCodeAt(0)); \n            if(sinal === '+') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                }     \n            } else if(sinal === '-') {\n                 // Uppercase letters\n                if ((code >= 65) && (code <= 90)){\n                    c = String.fromCharCode(mod((code-65 - numero), 26) + 65);              \n        \n                }\n                  \n                // Lowercase letters\n                else if ((code >= 97) && (code <= 122)){               \n                    c = String.fromCharCode(mod((code-97 - numero), 26) + 97);\n                } else {\n                     // Uppercase letters\n                    if ((code >= 65) && (code <= 90)){\n                        c = String.fromCharCode(mod((code-65 + numero), 26) + 65);              \n            \n                    }\n                      \n                    // Lowercase letters\n                    else if ((code >= 97) && (code <= 122)){               \n                        c = String.fromCharCode(mod((code-97 + numero), 26) + 97);\n                    }  \n                }\n            }        \n            \n            \n                   \n    \n          }\n         \n          // adiciona a saida\n          saida += c;\n        }\n        // All done!\n        return saida;\n        };  \n        this.funcaoTentativas()\n        return cesarCifra(this.state.text, tentativas, this.state.sinal);\n    }\n\n      // Funcao para descobrir letra de maior frequencia\n      funcaoTentativas(tentativas){\n        const funcaoFreq= () =>{\n          let text = this.state.text.toLowerCase();\n          let mapLetterAndFreq= new Map();\n          for(let i =0; i<26; i++ ){\n            mapLetterAndFreq.set(String.fromCharCode(i+97), 0)      \n          }\n  \n          let l;\n          for(let i=0; i<text.length;i++){           \n            l = text[i];        \n            if(l.match(/[a-zA-Z]/i)){        \n              let temp = mapLetterAndFreq.get(l)        \n              temp++;        \n              mapLetterAndFreq.set(l,temp); \n            }\n          }\n         \n          var mapAsc = new Map([...mapLetterAndFreq].sort((a,b)=>a[1]===b[1]?0 : a[1]>b[1]?-1:1));   \n          let aux =  Array.from([...mapAsc.keys()]);\n          console.log(aux) ;    \n          return aux;\n              \n        }\n        // T: 116 aparece  \t16.671% \n        // A: 116 aparece  \t11.602% \n        // S: 116 aparece  \t07.755% %         \n        const array = funcaoFreq();\n        return array.map((e, index) => {\n            let caract = e.charCodeAt();\n            if(index < tentativas){\n\n          \n              let lowerCaseT    = this.convert(parseInt(caract)- 116 );\n              let lowerCaseA    = this.convert(parseInt(caract) - 97);\n              let lowerCaseS    = this.convert(parseInt(caract) - 115); \n              return (\n                <div className=\"ui message\">\n                    <div className=\"item\" key={index + 'T'}>{index}T : {lowerCaseT}</div>\n                    <hr/>\n                    <br/>\n                    <div className=\"item\" key={index + 'A'}>{index}A : {lowerCaseA}</div>\n                    <hr/>\n                    <br/>\n                    <div className=\"item\" key={index + 'S'}>{index}S : {lowerCaseS}</div>\n                    <hr/>\n                    <br/>\n                </div>                \n            )             \n            }\n            return null\n        })\n        \n      }\n    \n     \n    handleChangeText(event) {\n        this.setState({\n          text: event.target.value\n        });        \n    }\n    handleChangeNumber(event) {\n      this.setState({\n        num: event.target.value\n      });\n  }\n    \n    \n    render(){\n        var divStyle = {\n            wordWrap: 'break-word',\n            flex: 'inherit'\n          };\n        return (\n            <div>\n                <h1>Frequencia</h1>\n                <div >\n                  <div className=\"ui form\">\n                      <div className=\"field\">\n                          <label htmlFor=\"example-number-input\">Tentativas</label>\n                          <input \n                                  type=\"number\"  id=\"example-number-input\" \n                                  value={this.state.num} onChange={this.handleChangeNumber.bind(this)}\n                          />                      \n                      </div>\n                  </div>\n                </div>\n                \n                <div className='ui form'>\n                      \n                        <div className=\"field\">\n                            <label htmlFor=\"exampleFormControlTextarea1\">Coloque o texto aqui</label>\n                            <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" \n                             rows=\"10\"\n                            placeholder={this.state.text}\n                            onChange={this.handleChangeText.bind(this)}></textarea>                            \n                        </div>   \n                  </div>                            \n                \n                <div className=\"ui list\">\n                    <div style={divStyle}\n                         className=\"ui divided items    \">                            \n                             {this.funcaoTentativas(this.state.num)}\n                             \n                        \n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Freq;","import React from 'react'\n\nimport Crip from './Crip'\nimport BruteForce from './BruteForce'\nimport Freq from './Freq'\n\nclass DescripOption extends React.Component {\n    render(){\n        if(this.props.divNumber === '1'){\n            return<div><Crip sinal='-'/></div>\n        } else if (this.props.divNumber === '2'){\n            return <BruteForce sinal='-'/>\n        } else {\n            return <Freq sinal='-'/>\n        }\n        \n    }\n}\n\nexport default DescripOption;","import React from 'react'\n\nimport DescripOption from './DescripOption'\nimport semanticUiTransition from 'semantic-ui-transition';\nimport semanticUiDropdown from 'semantic-ui-dropdown';\nimport $ from 'jquery'\n\n$.fn.transition = semanticUiTransition\n$.fn.dropdown = semanticUiDropdown\n\n\nclass Descrip extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = { value: '1'};\n        this.dropdown = null\n      }\n      \n      onChange(e) {\n        this.setState({\n          value: e.target.value\n        })\n      }\n     \n      componentDidMount(){          \n        $(this.dropdown).dropdown({\n            onChange: value => { this.setState({ value }) }\n          })\n      }\n      componentDidUpdate () { $(this.dropdown).dropdown('refresh') }\n      \n      \n      render() {\n       \n       \n        return ( \n            <div >          \n                <div className=\"field\">       \n                        <p>Metodo de Descriptografar     </p>     \n                        <div ref={el => { this.dropdown = el }} className=\"ui fluid search selection dropdown \" id=\"hit\" >\n                            <input type=\"hidden\" name={this.props.name}/>\n                            <div className=\"default text\">Chave</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu\">\n                                <div className='item' data-value='1'>Chave</div>\n                                <div className='item' data-value='2'>Força Bruta</div>\n                                <div className='item' data-value='3'>Frequencia</div>\n                            </div>                            \n                        </div>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>                  \n                <DescripOption divNumber={this.state.value} />      \n             </div>\n             \n        )\n      }\n}\n\nexport default Descrip;","import React from 'react';\n\nimport Crip from './Crip'\nimport Descrip from './Descrip'\n\nclass Comp extends React.Component{\n    renderList = () => {\n        \n        if(this.props.divNumber == null){\n            return(\n                <div> Nulo </div>\n            );\n        }\n        if(this.props.divNumber === '1'){\n            return(\n                <div> <Crip sinal = '+'/> </div>\n            );\n        } else if(this.props.divNumber === '2') {\n            return(\n                <div><Descrip/> </div>\n            );\n        } else {\n            return(\n                <div> Invalida </div>\n            );\n        }\n    }\n\n    render() {\n        \n        return(\n            <div>                \n               {this.renderList()}\n            </div>\n        );\n    }\n}\n\nexport default Comp;","import React from 'react';\nimport Comp from './Comp'\n\n\nimport semanticUiTransition from 'semantic-ui-transition';\nimport semanticUiDropdown from 'semantic-ui-dropdown';\nimport $ from 'jquery'\n\n$.fn.transition = semanticUiTransition\n$.fn.dropdown = semanticUiDropdown\n\nclass Selector extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = { value: '1'};\n        this.dropdown = null\n      }\n      \n      onChange(e) {\n        this.setState({\n          value: e.target.value\n        })\n      }\n     \n      componentDidMount(){          \n        $(this.dropdown).dropdown({\n            onChange: value => { this.setState({ value }) }\n          })\n      }\n      componentDidUpdate () { $(this.dropdown).dropdown('refresh') }\n      \n      \n      render() {\n       \n       \n        return ( \n            <div >          \n                <div className=\"field\">                    \n                        <div ref={el => { this.dropdown = el }} className=\"ui fluid search selection dropdown \" id=\"hit\" >\n                            <input type=\"hidden\" name={this.props.name}/>\n                            <div className=\"default text\">Escolha...</div>\n                            <i className=\"dropdown icon\"></i>\n                            <div className=\"menu\">\n                                <div className='item' data-value='1'>Criptografar</div>\n                                <div className='item' data-value='2'>Descriptografar</div>\n                            </div>                            \n                        </div>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <br/>  \n                <Comp divNumber = {this.state.value}/>              \n             </div>\n             \n        )\n      }\n}\n\nexport default Selector;\n// <Comp divNumber={this.state.value} />","import React from 'react';\nimport Selector from './components/Selector'\n\n\nfunction App() {\n  return (\n    <div className=\"ui raised very padded text container segment\">\n      <h2 className=\"ui header center  aligned\">Cifra de Cesar</h2>\n      <Selector />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}